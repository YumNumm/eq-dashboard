name: Deploy
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

on:
  push:
    branches:
      - main
      - develop
      - feature/ci # TODO(YumNumm): デバッグ用なので後で消す
  workflow_dispatch:
    inputs:
      ios:
        description: "Build iOS app"
        required: false
        default: true
        type: boolean
      android:
        description: "Build Android app"
        required: false
        default: true
        type: boolean
      web:
        description: "Build Web app"
        required: false
        default: true
        type: boolean
      macos:
        description: "Build macOS app"
        required: false
        default: true
        type: boolean
      windows:
        description: "Build Windows app"
        required: false
        default: true
        type: boolean
      linux:
        description: "Build Linux app"
        required: false
        default: true
        type: boolean

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      deploy-ios: ${{ steps.define-environment-matrix.outputs.deploy-ios }}
      deploy-android: ${{ steps.define-environment-matrix.outputs.deploy-android }}
      deploy-web: ${{ steps.define-environment-matrix.outputs.deploy-web }}
      deploy-macos: ${{ steps.define-environment-matrix.outputs.deploy-macos }}
      deploy-windows: ${{ steps.define-environment-matrix.outputs.deploy-windows }}
      deploy-linux: ${{ steps.define-environment-matrix.outputs.deploy-linux }}
    steps:
      - name: Decide which app to deploy
        id: define-environment-matrix
        run: |
          platforms=()
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ "${{ inputs.ios }}" = "true" ]; then
              platforms+=("ios")
            fi
            if [ "${{ inputs.android }}" = "true" ]; then
              platforms+=("android")
            fi
            if [ "${{ inputs.web }}" = "true" ]; then
              platforms+=("web")
            fi
            if [ "${{ inputs.macos }}" = "true" ]; then
              platforms+=("macos")
            fi
            if [ "${{ inputs.windows }}" = "true" ]; then
              platforms+=("windows")
            fi
            if [ "${{ inputs.linux }}" = "true" ]; then
              platforms+=("linux")
            fi
          elif [ "${{ github.event_name }}" = "push" ]; then
            platforms+=("ios" "android" "web" "macos" "windows" "linux")
          else
            echo "Unknown event name: ${{ github.event_name }}"
            exit 1
          fi

          echo "デプロイするプラットフォーム: ${platforms[@]}"
          for platform in "${platforms[@]}"; do
            echo "deploy-${platform}=true" >> $GITHUB_OUTPUT
          done

  build-ios:
    needs: define-matrix
    if: ${{ needs.define-matrix.outputs.deploy-ios }}
    name: Build iOS
    runs-on: macos-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup application runtime & Resolve dependencies
        uses: ./.github/actions/setup-application-runtime

      - name: Setup macOS Environment
        uses: ./.github/actions/setup-macos-environment

      - name: Create App Store Connect API Token
        uses: ./.github/actions/generate-app-store-connect-jwt
        with:
          app_store_connect_api_key_id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          app_store_connect_api_key_base64: ${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}

      - name: Fetch latest build number
        id: fetch-latest-build-number
        run: |
          platform=IOS
          app_id=6739848784
          curl -s https://api.appstoreconnect.apple.com/v1/builds \
            -G \
            -d "filter[platform]=${platform}" \
            -d "filter[id]=${app_id}" \
            -d "sort=-version" \
            -d "fields[builds]=version" \
            -d "limit=1" | \
            jq -r '.data.[].attributes.version' | \
            read -r build_number
          if [ -z "$build_number" ]; then
            echo "This is the first build. Set build number to 1."
            build_number=1
          else
            echo "Current build number: $build_number. Increment build number."
            build_number=$((build_number + 1))
          fi
          echo "build_number=${build_number}" >> $GITHUB_OUTPUT

      - name: Extract App Store Connect API Key
        working-directory: app/ios
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}" | base64 -d > AuthKey.p8

      - name: Build iOS
        env:
          BUILD_NUMBER: ${{ steps.fetch-latest-build-number.outputs.build_number }}
        run: |
          echo "BUILD_NUMBER=${BUILD_NUMBER}"
          flutter build ios --no-codesign --build-number=${BUILD_NUMBER}
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -sdk iphoneos \
            -configuration Release archive \
            -archivePath build/ios/Runner.xcarchive \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
          xcodebuild -exportArchive \
            -archivePath build/ios/Runner.xcarchive \
            -exportOptionsPlist build/ios/ExportOptions.plist \
            -exportPath build/ios/ipa \
            -allowProvisioningUpdates \
            -authenticationKeyIssuerID ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }} \
            -authenticationKeyID ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }} \
            -authenticationKeyPath AuthKey.p8

      - name: Upload ipa as artifact
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: ipa
          path: build/ios/ipa/Runner.ipa

  deploy-ios:
    needs: build-ios
    name: Deploy iOS
    runs-on: ubuntu-latest
    steps:
      - name: Download ipa
        uses: actions/download-artifact@v4.1.1
        with:
          name: ipa
          path: Runner.ipa

      - name: Setup macOS Environment
        uses: ./.github/actions/setup-macos-environment

      - name: Extract App Store Connect API Key
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}" | base64 -d > AuthKey.p8

      - name: Upload Ipa to App Store Connect
        run: |
          xcrun altool \
            --upload-app \
            -f Runner.ipa \
            --type ios \
            --apiIssuer ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }} \
            --apiKeyPath AuthKey.p8 \
            --verbose
